using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Drawing;
using System.Drawing.Imaging;
using System.Drawing.Drawing2D;
using System.Drawing.Text;
using System.IO;

namespace SubtitleBackoffice.ImageUtil
{
    public class ImageBuilder
    {
        ///////////////////////////////////////////////////////////////////////////////////////////
        // Default parameters
        ///////////////////////////////////////////////////////////////////////////////////////////
        private float fontSize = 40;
        private string fontFamilly = "휴먼매직체";
        private int penSize = 2;

        ///////////////////////////////////////////////////////////////////////////////////////////
        public void setFontFamilly(string familly)
        {
            this.fontFamilly = familly;
        }

        ///////////////////////////////////////////////////////////////////////////////////////////
        public void setFontSize(float size)
        {
            this.fontSize = size;
        }
        ///////////////////////////////////////////////////////////////////////////////////////////
        public void setPenSize(int size)
        {
            this.penSize = size;
        }

        ///////////////////////////////////////////////////////////////////////////////////////////
        public void Generate(int SizeX, int SizeY, string Text, string FileName)
        {
            ///////////////////////////////////////////////////////////////////////////////////////
            //Create Image and MemoryStream
            ///////////////////////////////////////////////////////////////////////////////////////
            Image imgThumb = new Bitmap(SizeX, SizeY, PixelFormat.Format24bppRgb);
            MemoryStream ms = new MemoryStream();

            ///////////////////////////////////////////////////////////////////////////////////////
            //Create Bitmap and Graphics
            ///////////////////////////////////////////////////////////////////////////////////////
            System.Drawing.Bitmap b = new System.Drawing.Bitmap(imgThumb);
            Graphics objGraphics = Graphics.FromImage(b);

            ///////////////////////////////////////////////////////////////////////////////////////
            //Set Graphics setting
            ///////////////////////////////////////////////////////////////////////////////////////
            objGraphics.Clear(Color.Transparent);
            objGraphics.SmoothingMode = SmoothingMode.AntiAlias;
            objGraphics.TextRenderingHint = TextRenderingHint.AntiAlias;

            ///////////////////////////////////////////////////////////////////////////////////////
            //StringFormat setup
            ///////////////////////////////////////////////////////////////////////////////////////
            StringFormat stringFormat = new StringFormat();
            stringFormat.Alignment = StringAlignment.Center;
            stringFormat.LineAlignment = StringAlignment.Center;

            Rectangle rect1 = new Rectangle(0, 0, SizeX, SizeY);

            ///////////////////////////////////////////////////////////////////////////////////////
            //Define font
            ///////////////////////////////////////////////////////////////////////////////////////
            Font objFont = new Font(fontFamilly, fontSize, System.Drawing.FontStyle.Bold,
                System.Drawing.GraphicsUnit.Pixel);

            objGraphics.DrawString(Text, objFont, new SolidBrush(Color.Black), rect1, stringFormat);

            try
            {
                b.Save(FileName + ".png", ImageFormat.Png);
            }
            catch (Exception ex)
            {
                Log.WriteLine("Error creating image");
                Log.WriteLine(ex.ToString());
            }
        }

        ///////////////////////////////////////////////////////////////////////////////////////////
        public void GenerateOutline(int SizeX, int SizeY, string Text, string FileName)
        {

            ///////////////////////////////////////////////////////////////////////////////////////
            //Create Image and MemoryStream
            ///////////////////////////////////////////////////////////////////////////////////////
            Image image = new Bitmap(SizeX, SizeY, PixelFormat.Format24bppRgb);
            MemoryStream ms = new MemoryStream();

            ///////////////////////////////////////////////////////////////////////////////////////
            //Create Bitmap and Graphics
            ///////////////////////////////////////////////////////////////////////////////////////
            Bitmap bmp = new System.Drawing.Bitmap(image);
            Graphics g = Graphics.FromImage(bmp);

            ///////////////////////////////////////////////////////////////////////////////////////
            //Set Graphics setting
            ///////////////////////////////////////////////////////////////////////////////////////
            g.Clear(Color.Transparent);
            g.SmoothingMode = SmoothingMode.AntiAlias;
            g.PixelOffsetMode = PixelOffsetMode.HighQuality;

            ///////////////////////////////////////////////////////////////////////////////////////
            //StringFormat setup
            ///////////////////////////////////////////////////////////////////////////////////////
            StringFormat sf = new StringFormat();
            sf.Alignment = StringAlignment.Center;
            sf.LineAlignment = StringAlignment.Center;

            ///////////////////////////////////////////////////////////////////////////////////////
            //Define font
            ///////////////////////////////////////////////////////////////////////////////////////
            Font f = new Font(fontFamilly, fontSize, FontStyle.Bold, GraphicsUnit.Pixel);

            ///////////////////////////////////////////////////////////////////////////////////////
            //Define Pen
            ///////////////////////////////////////////////////////////////////////////////////////
            Pen p = new Pen(Color.Black, penSize);
            p.LineJoin = LineJoin.Round; //prevent "spikes" at the path

            ///////////////////////////////////////////////////////////////////////////////////////
            //Define Brush
            ///////////////////////////////////////////////////////////////////////////////////////
            SolidBrush b = new SolidBrush(Color.White);

            ///////////////////////////////////////////////////////////////////////////////////////
            //Prepare drawing and region
            ///////////////////////////////////////////////////////////////////////////////////////
            Rectangle r = new Rectangle(0, 0, bmp.Width, bmp.Height);
            GraphicsPath gp = new GraphicsPath();
            gp.AddString(Text, f.FontFamily, (int)FontStyle.Bold, fontSize, r, sf);

            ///////////////////////////////////////////////////////////////////////////////////////
            //Actual Drawing
            ///////////////////////////////////////////////////////////////////////////////////////
            g.DrawPath(p, gp);
            g.FillPath(b, gp);

            ///////////////////////////////////////////////////////////////////////////////////////
            //Resource Cleanup
            ///////////////////////////////////////////////////////////////////////////////////////
            gp.Dispose();
            b.Dispose();
            f.Dispose();
            sf.Dispose();
            g.Dispose();

            ///////////////////////////////////////////////////////////////////////////////////////
            //File Saving
            ///////////////////////////////////////////////////////////////////////////////////////

            bmp.Save(FileName + ".png", System.Drawing.Imaging.ImageFormat.Png);

            bmp.Dispose();
        }
    }
}